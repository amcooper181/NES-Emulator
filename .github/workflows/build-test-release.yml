name: build-test-release

# This should only be manually triggered for now, as new releases
# should be infrequent while we are still developing core features.
on:
  workflow_dispatch:

    # Allow the workflow dispatcher to specify whether major, minor, or patch
    # should be incremented.
    inputs:
        version_bump:
            description: 'The type of version bump to perform.'
            required: true
            default: 'patch'
            type: choice
            options:
                - 'major'
                - 'minor'
                - 'patch'

jobs:
    versioning:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.new_version.outputs.new_tag }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            # Uses a handy marketplace action for bumping the version number
            # using semantic versioning.
            - name: auto-inc version
              id: new_version
              uses: anothrNick/github-tag-action@1.71.0
              env: 
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEFAULT_BUMP: ${{ github.event.inputs.version_bump }}
                  WITH_V: true

    build:
        needs: versioning
        strategy:
            matrix:
                # Build natively in: x64 Linux, x64 Windows, arm64 macOS
                os: [ubuntu-latest, windows-latest, macos-latest]
        
        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Build x64 Linux
              if: matrix.os == 'ubuntu-latest'
              run: |
                echo "Building for x64 Linux"
                docker build -t nes-emulator:latest -f docker/ubuntu-Dockerfile .
            
            - name: Build arm64 macOS
              if: matrix.os == 'macos-latest'
              run: |
                echo "Building for arm64 macOS"
                brew install llvm cmake pkg-config ninja
                git clone https://github.com/microsoft/vcpkg.git ~/vcpkg
                cd ~/vcpkg && ./bootstrap-vcpkg.sh -disableMetrics
                export VCPKG_ROOT="$HOME/vcpkg"
                export PATH=$VCPKG_ROOT:$PATH
                

            - name: Build x64 Windows
              if: matrix.os == 'windows-latest'
              run: |
                echo "Building for x64 Windows"
                

