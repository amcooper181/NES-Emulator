name: build-linux

on: pull_request

# on:
#   workflow_dispatch:
#     inputs:
#       branch:
#         description: 'Branch to build'
#         required: true
#         default: 'main'
#         type: string
#       commit:
#         description: 'Shortform commit hash to build'
#         required: true
#         default: 'HEAD'
#         type: string
#   workflow_call:
#     inputs:
#       branch:
#         description: 'Branch to build'
#         required: true
#         default: 'main'
#         type: string
#       commit:
#         description: 'Shortform commit hash to build'
#         required: true
#         default: 'HEAD'
#         type: string
#     outputs:
#       artifact_name:
#         description: 'Name of the artifact to upload'
#         value: 'Linux-x86-64'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Checkout specific commit (if provided)
      #   if: ${{ github.event.inputs.commit != 'HEAD' }}
      #   run: |
      #     git fetch --depth=1 origin ${{ github.event.inputs.commit }}
      #     git checkout ${{ github.event.inputs.commit }}

      - name: Set up environment variables
        run: |
          echo "VCPKG_DEFAULT_BINARY_CACHE=$HOME/vcpkg_cache" >> $GITHUB_ENV
          echo "CMAKE_C_COMPILER=/usr/bin/clang-19" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER=/usr/bin/clang++-19" >> $GITHUB_ENV
          echo "CMAKE_MAKE_PROGRAM=/usr/bin/ninja" >> $GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV
          echo "VCPKG_ROOT=/usr/local/share/vcpkg" >> $GITHUB_ENV
          echo "VCPKG_INSTALLED_DIR=/usr/local/share/vcpkg/packages" >> $GITHUB_ENV

      - name: Cache vcpkg dependencies
        uses: actions/cache@v4
        with:
          path: $HOME/vcpkg_cache
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Install basic dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-19 clang-tools-19 lldb-19 lld-19 ninja-build libtool libltdl-dev libc++-dev libc++abi-dev
          sudo ln -sf /usr/bin/clang-19 /usr/bin/clang
          sudo ln -sf /usr/bin/clang++-19 /usr/bin/clang++
      
      - name: Check clang version
        run: |
          which clang
          which clang++
          clang --version
          clang++ --version

      - name: Install vcpkg dependencies
        run: |
          mkdir -p $HOME/vcpkg_cache
          export VCPKG_FEATURE_FLAGS=manifests
          /usr/local/share/vcpkg/vcpkg install --recurse

      # For some reason, installing these before vcpkg causes vcpkg to break?
      - name: Install OpenGL dependencies
        run: |
          sudo apt update
          sudo apt install -y libgl1-mesa-dev libx11-dev xorg-dev
      
      - name: Configure CMake
        run: |
          cmake -B build -S . \
            -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE="/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake" \
            -DCMAKE_C_COMPILER="/usr/bin/clang-19" \
            -DCMAKE_CXX_COMPILER="/usr/bin/clang++-19" \
            -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_FRONTEND=ON \
            -DBUILD_TESTS=ON             

      - name: Build
        run: |
          cmake --build build --config Release

      - name: Upload build directory
        uses: actions/upload-artifact@v4
        with:
          name: Linux-x86-64
          path: build